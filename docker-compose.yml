version: "3.9"

services:
  # Create service with RabbitMQ.
  message-broker:
    image: rabbitmq:3-management-alpine
    container_name: message-broker
    ports:
      - 5672:5672 # for sender and consumer connections
      - 15672:15672 # for serve RabbitMQ GUI
    volumes:
    #  - ${HOME}/dev-rabbitmq/data/:/var/lib/rabbitmq
    #  - ${HOME}/dev-rabbitmq/log/:/var/log/rabbitmq
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    restart: always
    networks:
      - dev-network

  postgres-compose:
    image: postgres
    environment:
      POSTGRES_USERNAME: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - "5432:5432"
    volumes:
      - /home/andre/PostgreSQL:/var/lib/postgresql/data
    networks:
      - postgres-compose-network
      
  pgadmin-compose:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "postgres@email.com"
      PGADMIN_DEFAULT_PASSWORD: "postgres"
    ports:
      - "15432:80"
    depends_on:
      - postgres-compose
    networks:
      - postgres-compose-network      
  # Create service 
  api:
    container_name: api
    ports:
      - 8080:8080
    build:
    #  context: .
      dockerfile: Dockerfile
      context: ./api/
    environment:
      AMQP_SERVER_URL: amqp://guest:guest@message-broker:5672/
    restart: always
    networks:
      - dev-network
    depends_on:
      - message-broker

  # Create service with message consumer.
  consumer:
    container_name: consumer
    build:
      dockerfile: Dockerfile
      context: ./consumer
    environment:
      AMQP_SERVER_URL: amqp://guest:guest@message-broker:5672/
      NOVOS_CLIENTES: clientes
    restart: always
    networks:
      - dev-network
    depends_on:
      - api
      - message-broker

networks:
  # Create a new Docker network.
  dev-network:
    driver: bridge
  postgres-compose-network:
    driver: bridge  